{"version":3,"file":"static/js/823.09f21f33.chunk.js","mappings":"4rQAEaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4aAqB1BC,EAAeH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0FAOzBG,EAAQL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yEAMlBK,EAAOP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qV,SClChBO,EAAO,SAAHC,GAAyB,IAAnBC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MACzB,OACIC,EAAAA,EAAAA,MAACd,EAAa,CAAAe,SAAA,EACVC,EAAAA,EAAAA,KAACZ,EAAY,CAAAW,UACTC,EAAAA,EAAAA,KAACV,EAAK,CAACW,IAAKJ,EAAOK,IAAKN,OAE5BI,EAAAA,EAAAA,KAACR,EAAI,CAAAO,SAAEH,MAGnB,ECTaO,EAAOlB,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mCAIlBiB,EAAQnB,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAKjBkB,EAAOpB,EAAAA,GAAAA,QAAcM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iIASrBmB,EAASrB,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,ycCKnC,EApBa,WAGT,OAFAoB,QAAQC,IAAIC,IAGRX,EAAAA,EAAAA,MAACK,EAAI,CAAAJ,SAAA,EACDC,EAAAA,EAAAA,KAACI,EAAK,CAAAL,SAAC,4BACPC,EAAAA,EAAAA,KAACK,EAAI,CAAAN,SACAU,EAAAA,KAAgB,SAAAb,GAAI,OACjBI,EAAAA,EAAAA,KAACN,EAAI,CAEDE,KAAMA,EAAKc,SACXb,MAAOD,EAAKe,OAAO,ICGvB,WAAH,IAAIC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGV,GAAG,GAAG,CDlBqBG,GAGP,OAGVxB,EAAAA,EAAAA,KAACM,EAAM,CAAAP,SAAC,gBAGpB,C","sources":["components/Card/Card.styled.js","components/Card/Card.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n    position: relative;\n\n    box-sizing: border-box;\n    width: 250px;\n    height: 300px;\n\n    border-radius: 10px;\n\n    background-color: var(--main-bg-color);\n\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.63);\n        transform: scale(1.03);\n    }\n\n`\n\nexport const ImgContainer = styled.div`\n    box-sizing: border-box;\n    border-radius: 10px;\n\n    overflow: hidden;\n`\n\nexport const Image = styled.img`\n    width: 250px;\n    height: 300px;\n    object-fit: cover;\n`\n\nexport const Name = styled.h2`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    box-sizing: border-box;\n    width: 100%;\n    padding: 10px;\n\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n\n    font-size: 15px;\n\n    background-color: var(--hover-bg-color);\n    opacity: 0.8;\n    color: var(--light-text-color);\n`","import { CardContainer, ImgContainer, Image, Name } from \"./Card.styled\"\n\nexport const Card = ({ hero, image }) => {\n    return (\n        <CardContainer>\n            <ImgContainer>\n                <Image src={image} alt={hero}/>\n            </ImgContainer>\n            <Name>{hero}</Name>\n        </CardContainer>\n    )\n}","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    text-align: center;\n`\n\nexport const Title = styled.h1`\n    margin-top: 30px;\n    color: var(--main-text-color);\n`\n\nexport const Grid = styled.section`\n    padding: 40px 0 30px 0;\n\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n`\n\nexport const Button = styled.button`\n    cursor: pointer;\n\n    box-sizing: border-box;\n    padding: 12px 20px;\n    border: none;\n    border-radius: 5px;\n\n    background-color: var(--accent-bg-color);\n    color: var(--light-text-color);\n\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 16px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background-color: var(--hover-bg-color);\n    }\n`","import superheroes from \"../../mockdb/superheroes.json\";\nimport { Card } from \"components/Card/Card\";\nimport { Main, Title, Grid, Button } from \"./Home.styled\";\nimport { nanoid } from 'nanoid';\n\nconst Home = () => {\n    console.log(superheroes);\n\n    return (\n        <Main>\n            <Title>Let's meet the Heroes!</Title>\n            <Grid>\n                {superheroes.map(hero => \n                    <Card \n                        key={nanoid()}\n                        hero={hero.nickname}\n                        image={hero.images[0]}\n                    />\n                )}\n            </Grid>\n            <Button>Load More</Button>\n        </Main>\n    )\n}\n\nexport default Home;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["CardContainer","styled","_templateObject","_taggedTemplateLiteral","ImgContainer","_templateObject2","Image","_templateObject3","Name","_templateObject4","Card","_ref","hero","image","_jsxs","children","_jsx","src","alt","Main","Title","Grid","Button","console","log","superheroes","nickname","images","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid"],"sourceRoot":""}