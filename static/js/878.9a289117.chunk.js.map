{"version":3,"file":"static/js/878.9a289117.chunk.js","mappings":"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","sources":["components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","pages/Edit/Edit.styled.js","pages/Edit/Edit.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n    max-width: 800px;\n    padding: 10px;\n\n    margin: 0 auto;\n\n    text-align: left;\n    color: var(--main-text-color);\n\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`\n\nexport const Label = styled.label`\n    display: block;\n    margin-bottom: 10px;\n    padding-top: 10px;\n\n    font-weight: 500;\n`\n\nexport const Description = styled.p`\n    padding-top: 10px;\n    font-weight: 500;\n`\n\nexport const FileInput = styled.input`\n    display: block;\n    box-sizing: border-box;\n    width: 100%;\n\n    padding: 12px 20px;\n\n    border: 2px solid #ccc;\n    border-radius: 4px;\n    background-color: var(--main-bg-color);\n    color: var(--secondary-text-color);\n\n    font-family: inherit;\n    font-size: 13px;\n`\n\nexport const Input = styled.input`\n    display: block;\n    box-sizing: border-box;\n    width: 100%;\n\n    padding: 12px 20px;\n\n    border: 2px solid #ccc;\n    border-radius: 4px;\n    background-color: var(--secondary-bg-color);\n    color: var(--secondary-text-color);\n\n    font-family: inherit;\n    font-size: 13px;\n`\n\nexport const TextArea = styled.textarea`\n    display: block;\n    resize: none;\n    box-sizing: border-box;\n    width: 100%;\n    height: 150px;\n\n    padding: 12px 20px;\n    \n    border: 2px solid #ccc;\n    border-radius: 4px;\n    background-color: var(--secondary-bg-color);\n    color: var(--secondary-text-color);\n\n    font-family: inherit;\n    font-size: 13px;\n`\n\nexport const Button = styled.button`\n    cursor: pointer;\n\n    box-sizing: border-box;\n    margin-top: 25px;\n    padding: 12px 20px;\n    width: 200px;\n    border: none;\n    border-radius: 5px;\n\n    background-color: var(--accent-bg-color);\n    color: var(--light-text-color);\n\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 16px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background-color: var(--hover-bg-color);\n    }\n`\n\nexport const MainInfo = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n`\n\nexport const AdditionalInfo = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n\n    margin-top: 20px;\n`\n\nexport const Block = styled.div`\n    width: 350px;\n`","import { \n    Form, \n    Label, \n    Description, \n    Input, \n    FileInput,\n    TextArea, \n    Button, \n    MainInfo,\n    AdditionalInfo,\n    Block\n} from \"./EditForm.styled\"\nimport { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { operations } from \"redux/hero/operations\";\n\nexport const EditForm = ({ info }) => {\n    const [nickname, setNickname] = useState('');\n    const [name, setName] = useState('');\n    const [origin, setOrigin] = useState('');\n    const [powers, setPowers] = useState('');\n    const [phrase, setPhrase] = useState('');\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const onInputChange = (e) => {\n        switch (e.target.name) {\n            case \"nickname\": \n                setNickname(e.target.value);\n                break;\n            case \"real_name\": \n                setName(e.target.value);\n                break;\n            case \"origin\": \n                setOrigin(e.target.value);\n                break;\n            case \"superpowers\": \n                setPowers(e.target.value);\n                break;\n            case \"catchphrase\": \n                setPhrase(e.target.value);\n                break;\n            default: \n                return;\n        }\n    }\n\n    useEffect(() => {\n        if (!info) {\n            return;\n        }\n\n        const { nickname, real_name, origin_description, superpowers, catch_phrase } = info;\n        setNickname(nickname);\n        setName(real_name);\n        setOrigin(origin_description);\n        setPowers(superpowers);\n        setPhrase(catch_phrase);\n\n    }, [info]);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n\n        const newInfo = {\n            nickname: nickname,\n            real_name: name,\n            origin_description: origin,\n            superpowers: powers,\n            catch_phrase: phrase\n        }\n\n        if (location.pathname === '/create') {\n            dispatch(operations.createHero(newInfo));\n            navigate('/');\n            reset();\n        }\n\n        if (location.pathname === '/edit') {\n            dispatch(operations.updateHero({id: info._id, newInfo}));\n        }\n    }\n\n    const reset = () => {\n        setNickname('');\n        setName('');\n        setOrigin('');\n        setPowers('');\n        setPhrase('');\n    }\n\n    return (\n        <>\n            <Form onSubmit={handleFormSubmit}>\n                <MainInfo>\n                    <Block>\n                        <Label htmlFor=\"main_image\">Choose the main image</Label>\n                        <FileInput \n                            type=\"file\" \n                            id=\"main_image\"\n                            name=\"main_image\" \n                            accept=\"image/png, image/jpeg\"\n                            // required\n                        />\n                    </Block>\n                    \n                    <Block>\n                        <Label htmlFor=\"nickname\">Nickname</Label>\n                        <Input \n                            type=\"text\"\n                            name=\"nickname\" \n                            id=\"nickname\"\n                            placeholder=\"Enter name...\" \n                            value={nickname}\n                            onChange={onInputChange}\n                            required\n                        />\n\n                        <Label htmlFor=\"nickname\">Real Name</Label>\n                        <Input \n                            type=\"text\"\n                            name=\"real_name\" \n                            id=\"real_name\"\n                            placeholder=\"Enter name...\" \n                            value={name}\n                            onChange={onInputChange}\n                            required\n                        />\n                    </Block>\n                </MainInfo>\n                    \n                <AdditionalInfo>\n                    <Block style={{display: 'flex', flexDirection: 'column', gap: '10px'}}>\n                        <Description>Add more images</Description>\n                        <FileInput \n                            type=\"file\" \n                            id=\"image\"\n                            name=\"image\" \n                            accept=\"image/png, image/jpeg\"\n                        />\n                        <FileInput \n                            type=\"file\" \n                            id=\"image\"\n                            name=\"image\" \n                            accept=\"image/png, image/jpeg\"\n                        />\n                    </Block>\n                    \n                    <Block>\n                        <Label htmlFor=\"origin\">Origin Description</Label>\n                        <TextArea \n                            name=\"origin\" \n                            id=\"origin\"\n                            placeholder=\"Tell the story...\" \n                            value={origin}\n                            onChange={onInputChange}\n                        />\n\n                        <Label htmlFor=\"superpowers\">Superpowers</Label> \n                        <TextArea \n                            name=\"superpowers\" \n                            id=\"superpowers\"\n                            placeholder=\"List the powers...\" \n                            value={powers}\n                            onChange={onInputChange}\n                        />\n\n                        <Label htmlFor=\"catchphrase\">Catchphrase</Label> \n                        <TextArea \n                            name=\"catchphrase\" \n                            id=\"catchphrase\"\n                            placeholder=\"The hero says...\" \n                            value={phrase}\n                            onChange={onInputChange}\n                            style={{height: '90px'}}\n                        />\n                    </Block>\n                </AdditionalInfo>\n\n                <Button type=\"submit\">Submit Changes</Button>\n            </Form>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    text-align: center;\n`\n\nexport const Title = styled.h1`\n    margin-top: 30px;\n    color: var(--main-text-color);\n`\n\nexport const Section = styled.section`\n    padding: 20px 0 30px 0;\n`","import { EditForm } from \"components/EditForm/EditForm\";\nimport { Main, Title, Section } from \"./Edit.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrent, selectHeroes } from \"redux/selectors\";\n\nconst Edit = () => {\n    const current = useSelector(selectCurrent);\n    const heroes = useSelector(selectHeroes);\n    \n    const hero = heroes.find(hero => hero._id === current);\n\n    return (\n        <Main>\n            <Title>Let's update the info!</Title>\n            <Section>\n                <EditForm info={hero}/>\n            </Section>\n        </Main>\n    )\n}\n\nexport default Edit;","export const selectHeroes = state => state.heroes;\nexport const selectCurrent = state => state.current;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Description","_templateObject3","FileInput","_templateObject4","Input","_templateObject5","TextArea","_templateObject6","Button","_templateObject7","MainInfo","_templateObject8","AdditionalInfo","_templateObject9","Block","_templateObject10","EditForm","_ref","info","_useState","useState","_useState2","_slicedToArray","nickname","setNickname","_useState3","_useState4","name","setName","_useState5","_useState6","origin","setOrigin","_useState7","_useState8","powers","setPowers","_useState9","_useState10","phrase","setPhrase","location","useLocation","navigate","useNavigate","dispatch","useDispatch","onInputChange","e","target","value","useEffect","real_name","origin_description","superpowers","catch_phrase","reset","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","newInfo","pathname","operations","id","_id","htmlFor","type","accept","placeholder","onChange","required","style","display","flexDirection","gap","height","Main","Title","Section","current","useSelector","selectCurrent","hero","selectHeroes","find","state","heroes"],"sourceRoot":""}