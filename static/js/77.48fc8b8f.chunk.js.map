{"version":3,"file":"static/js/77.48fc8b8f.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Card/Card.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n    position: relative;\n\n    box-sizing: border-box;\n    width: 250px;\n    height: 300px;\n\n    border-radius: 10px;\n\n    background-color: var(--main-bg-color);\n\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.63);\n        transform: scale(1.03);\n    }\n\n`\n\nexport const ImgContainer = styled.div`\n    box-sizing: border-box;\n    border-radius: 10px;\n\n    overflow: hidden;\n`\n\nexport const Image = styled.img`\n    width: 250px;\n    height: 300px;\n    object-fit: cover;\n`\n\nexport const Name = styled.h2`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    box-sizing: border-box;\n    width: 100%;\n    padding: 10px;\n\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n\n    font-size: 15px;\n\n    background-color: var(--hover-bg-color);\n    opacity: 0.8;\n    color: var(--light-text-color);\n`","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`\n\nexport const ModalPopup = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalPopup } from './Modal.styled';\n\nexport const Modal = ({ onClose }) => {\n    useEffect(() => {\n        const handleKeydown = event => {\n            if (event.code === 'Escape') {\n                onClose();\n            };\n        };\n\n        window.addEventListener('keydown', handleKeydown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeydown);\n        }\n    }, [onClose]);\n\n    const handleOverlayClick = event => {\n        if (event.currentTarget === event.target) {\n            onClose();\n        }\n    };\n\n    const modalRoot = document.querySelector('#modal-root');\n    \n    return createPortal(\n        <Backdrop onClick={handleOverlayClick}>\n            <ModalPopup>\n                <span>modal kukusiki</span>\n            </ModalPopup>\n        </Backdrop>,\n        modalRoot,\n    );\n};\n","import { CardContainer, ImgContainer, Image, Name } from \"./Card.styled\";\nimport { Modal } from \"components/Modal/Modal\";\nimport { useState } from 'react';\n\nexport const Card = ({ hero, image }) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const toggleModal = () => {\n        setShowModal(prevState => !prevState);\n    };\n\n    return (\n        <>\n            <CardContainer onClick={toggleModal}>\n                <ImgContainer>\n                    <Image src={image} alt={hero}/>\n                </ImgContainer>\n                <Name>{hero}</Name>\n            </CardContainer>\n\n            {showModal &&\n                <Modal\n                    onClose={toggleModal}\n                />\n            }\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    text-align: center;\n`\n\nexport const Title = styled.h1`\n    margin-top: 30px;\n    color: var(--main-text-color);\n`\n\nexport const Grid = styled.section`\n    padding: 40px 0 30px 0;\n\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n`\n\nexport const Button = styled.button`\n    cursor: pointer;\n\n    box-sizing: border-box;\n    padding: 12px 20px;\n    border: none;\n    border-radius: 5px;\n\n    background-color: var(--accent-bg-color);\n    color: var(--light-text-color);\n\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 16px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background-color: var(--hover-bg-color);\n    }\n`","import superheroes from \"../../mockdb/superheroes.json\";\nimport { Card } from \"components/Card/Card\";\nimport { Main, Title, Grid, Button } from \"./Home.styled\";\nimport { nanoid } from 'nanoid';\n\nconst Home = () => {\n    console.log(superheroes);\n\n    return (\n        <Main>\n            <Title>Check out the Superheroes!</Title>\n            <Grid>\n                {superheroes.map(hero => \n                    <Card \n                        key={nanoid()}\n                        hero={hero.nickname}\n                        image={hero.images[0]}\n                    />\n                )}\n            </Grid>\n            <Button>Load More</Button>\n        </Main>\n    )\n}\n\nexport default Home;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["CardContainer","styled","_templateObject","_taggedTemplateLiteral","ImgContainer","_templateObject2","Image","_templateObject3","Name","_templateObject4","Backdrop","ModalPopup","Modal","_ref","onClose","useEffect","handleKeydown","event","code","window","addEventListener","removeEventListener","modalRoot","document","querySelector","createPortal","_jsx","onClick","currentTarget","target","children","Card","hero","image","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","toggleModal","prevState","_jsxs","_Fragment","src","alt","Main","Title","Grid","Button","console","log","superheroes","nickname","images","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid"],"sourceRoot":""}